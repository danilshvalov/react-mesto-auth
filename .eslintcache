[{"C:\\dev\\projects\\react\\react-mesto-auth\\src\\index.js":"1","C:\\dev\\projects\\react\\react-mesto-auth\\src\\reportWebVitals.js":"2","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\App.js":"3","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Main.js":"4","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\AddPlacePopup.js":"5","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\MessagePopup.js":"6","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Footer.js":"7","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Header.js":"8","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\LoadingSpinner.js":"9","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\EditAvatarPopup.js":"10","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\EditProfilePopup.js":"11","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\ConfirmPopup.js":"12","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\ImagePopup.js":"13","C:\\dev\\projects\\react\\react-mesto-auth\\src\\utils\\api.js":"14","C:\\dev\\projects\\react\\react-mesto-auth\\src\\contexts\\CurrentUserContext.js":"15","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\PopupWithForm.js":"16","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Field.js":"17","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\SubmitButton.js":"18","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Card.js":"19","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Popup.js":"20","C:\\dev\\projects\\react\\react-mesto-auth\\src\\utils\\utils.js":"21","C:\\dev\\projects\\react\\react-mesto-auth\\src\\utils\\constants.js":"22","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Register.js":"23","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\ProtectedRoute.js":"24","C:\\dev\\projects\\react\\react-mesto-auth\\src\\contexts\\ThemeContext.js":"25","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Form.js":"26","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\ThemeSwitcher.js":"27","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\PushButton.js":"28","C:\\dev\\projects\\react\\react-mesto-auth\\src\\utils\\theme.js":"29","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\ColoredLink.js":"30","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\ColoredTitle.js":"31","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Fieldset.js":"32","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Login.js":"33","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Navbar.js":"34","C:\\dev\\projects\\react\\react-mesto-auth\\src\\utils\\auth.js":"35","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\InfoTooltip.js":"36"},{"size":604,"mtime":1612756453550,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1611811654960,"results":"39","hashOfConfig":"38"},{"size":10676,"mtime":1614484722820,"results":"40","hashOfConfig":"38"},{"size":1913,"mtime":1614397083750,"results":"41","hashOfConfig":"38"},{"size":2393,"mtime":1614483639300,"results":"42","hashOfConfig":"38"},{"size":584,"mtime":1614430114387,"results":"43","hashOfConfig":"38"},{"size":567,"mtime":1614498032141,"results":"44","hashOfConfig":"38"},{"size":1190,"mtime":1614498070199,"results":"45","hashOfConfig":"38"},{"size":496,"mtime":1614498089642,"results":"46","hashOfConfig":"38"},{"size":1984,"mtime":1614479485559,"results":"47","hashOfConfig":"38"},{"size":2762,"mtime":1614479683517,"results":"48","hashOfConfig":"38"},{"size":1190,"mtime":1614483657386,"results":"49","hashOfConfig":"38"},{"size":471,"mtime":1614429621533,"results":"50","hashOfConfig":"38"},{"size":2696,"mtime":1614480721386,"results":"51","hashOfConfig":"38"},{"size":112,"mtime":1613125749300,"results":"52","hashOfConfig":"38"},{"size":1132,"mtime":1614498558504,"results":"53","hashOfConfig":"38"},{"size":2005,"mtime":1614404764144,"results":"54","hashOfConfig":"38"},{"size":865,"mtime":1614288549316,"results":"55","hashOfConfig":"38"},{"size":2076,"mtime":1614498492317,"results":"56","hashOfConfig":"38"},{"size":1452,"mtime":1614498459304,"results":"57","hashOfConfig":"38"},{"size":553,"mtime":1614429633826,"results":"58","hashOfConfig":"38"},{"size":8599,"mtime":1614498719640,"results":"59","hashOfConfig":"38"},{"size":2109,"mtime":1614470922710,"results":"60","hashOfConfig":"38"},{"size":411,"mtime":1614498572615,"results":"61","hashOfConfig":"38"},{"size":101,"mtime":1614117141265,"results":"62","hashOfConfig":"38"},{"size":516,"mtime":1614432337905,"results":"63","hashOfConfig":"38"},{"size":788,"mtime":1614498743416,"results":"64","hashOfConfig":"38"},{"size":481,"mtime":1614498440798,"results":"65","hashOfConfig":"38"},{"size":632,"mtime":1614427136977,"results":"66","hashOfConfig":"38"},{"size":600,"mtime":1614477645075,"results":"67","hashOfConfig":"38"},{"size":531,"mtime":1614428889625,"results":"68","hashOfConfig":"38"},{"size":532,"mtime":1614429279131,"results":"69","hashOfConfig":"38"},{"size":1849,"mtime":1614471022189,"results":"70","hashOfConfig":"38"},{"size":1456,"mtime":1614497186556,"results":"71","hashOfConfig":"38"},{"size":3105,"mtime":1614478693703,"results":"72","hashOfConfig":"38"},{"size":1319,"mtime":1614478118494,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"926nwd",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\dev\\projects\\react\\react-mesto-auth\\src\\index.js",[],["150","151"],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\reportWebVitals.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\App.js",["152"],"import React from \"react\";\nimport api from \"../utils/api\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport ImagePopup from \"./ImagePopup\";\nimport Main from \"./Main\";\nimport MessagePopup from \"./MessagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ConfirmPopup from \"./ConfirmPopup\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport ThemeContext from \"../contexts/ThemeContext\";\nimport { addThemeAttrs } from \"../utils/utils\";\nimport * as theme from \"../utils/theme\";\nimport auth from \"../utils/auth\";\nimport Login from \"./Login\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport InfoTooltip from \"./InfoTooltip\";\n\nfunction App() {\n  // states\n  const [isAppLoading, setIsAppLoading] = React.useState(true);\n  const [isDOMLoading, setDOMLoading] = React.useState(true);\n  const [isApiDataLoading, setApiDataLoading] = React.useState(true);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(\n    false\n  );\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmPopupOpen, setConfirmPopupOpen] = React.useState(false);\n  const [isMessagePopupOpen, setMessagePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [isInfoTooltipPopupOpen, setInfoTooltipPopupOpen] = React.useState(\n    false\n  );\n  const [selectedCard, setSelectedCard] = React.useState();\n  const [popupMessage, setPopupMessage] = React.useState(\"\");\n  const [infoTooltipData, setInfoTooltipData] = React.useState({\n    message: \"\",\n    redirectPath: \"\",\n  });\n  const [isActionSuccess, setActionSuccess] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({\n    name: \"\",\n    about: \"\",\n    avatar: \"\",\n    _id: \"\",\n  });\n  const [email, setEmail] = React.useState(\"\");\n  const [currentTheme, setCurrentTheme] = React.useState(theme.getUserTheme());\n  const [cards, setCards] = React.useState([]);\n  const [\n    cardCandidateForDeletion,\n    setCardCandidateForDeletion,\n  ] = React.useState();\n  const [isLoggedIn, setLoggedIn] = React.useState(false);\n  const history = useHistory();\n\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    setDOMLoading(false);\n  });\n  // effects\n  React.useEffect(() => {\n    handleTokenCheck();\n  }, []);\n\n  React.useEffect(() => {\n    setIsAppLoading(isApiDataLoading || isDOMLoading);\n  }, [isApiDataLoading, isDOMLoading]);\n\n  React.useEffect(() => {\n    theme.updateUserTheme(currentTheme);\n  }, [currentTheme]);\n\n  // functions\n  const closeMessagePopup = () => {\n    setMessagePopupOpen(false);\n  };\n\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setConfirmPopupOpen(false);\n    setImagePopupOpen(false);\n  };\n\n  const updateToken = (data) => {\n    localStorage.setItem(\"jwt\", data.token);\n  };\n\n  const openInfoTooltip = ({ message, redirectPath, isSuccess }) => {\n    setActionSuccess(isSuccess);\n    setInfoTooltipData({ message, redirectPath });\n    setInfoTooltipPopupOpen(true);\n  };\n\n  const loadApiData = () => {\n    handleApiError(\n      Promise.all([api.getUserInfo(), api.getInitialCards()]),\n      (result) => {\n        const [userInfo, initialCards] = result;\n        setCurrentUser(userInfo);\n        setCards(initialCards);\n        setApiDataLoading(false);\n      }\n    );\n  };\n\n  // handlers\n  const handleApiError = (promise, callback) => {\n    return promise\n      .then((data) => callback(data))\n      .catch((error) => {\n        if (error instanceof TypeError) {\n          setPopupMessage(\n            \"Потеряно соединение с сервером, повторите попытку позднее\"\n          );\n        } else if (typeof error === \"string\") {\n          setPopupMessage(error);\n        } else {\n          setPopupMessage(\"Непредвиденная ошибка, повторите попытку позднее\");\n        }\n        setMessagePopupOpen(true);\n      });\n  };\n  const handleUpdateUser = (data) => {\n    return handleApiError(api.setUserInfo(data), (userInfo) => {\n      setCurrentUser(userInfo);\n      setEditProfilePopupOpen(false);\n    });\n  };\n  const handleAddPlace = (data) => {\n    return handleApiError(api.addPlace(data), (newCard) => {\n      setCards([newCard, ...cards]);\n      setAddPlacePopupOpen(false);\n    });\n  };\n  const handleUpdateAvatar = (data) => {\n    return handleApiError(api.changeAvatar(data.avatar), ({ avatar }) => {\n      currentUser.avatar = avatar;\n      setEditAvatarPopupOpen(false);\n    });\n  };\n  const handleInfoTooltipPopupClose = (redirectPath) => {\n    setInfoTooltipPopupOpen(false);\n    if (redirectPath) {\n      history.push(redirectPath);\n    }\n  };\n\n  // button-handlers\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n  const handleThemeSwitch = () => {\n    if (currentTheme === \"dark\") {\n      setCurrentTheme(\"light\");\n    } else {\n      setCurrentTheme(\"dark\");\n    }\n  };\n  // ---------------------------------------------------------------\n\n  // auth-handlers\n  const handleLogin = (data) => {\n    auth\n      .authorize(data)\n      .then((res) => {\n        updateToken(res);\n        setLoggedIn(true);\n        setEmail(data.email);\n        openInfoTooltip({\n          message: \"успех\",\n          redirectPath: \"/\",\n          isSuccess: true,\n        });\n        loadApiData();\n      })\n      .catch((errorMessage) => {\n        openInfoTooltip({ message: errorMessage, isSuccess: false });\n      });\n  };\n\n  const handleRegister = (data) => {\n    auth\n      .register(data)\n      .then((res) => {\n        updateToken(res);\n        openInfoTooltip({\n          message: \"успех\",\n          redirectPath: \"/sign-in\",\n          isSuccess: true,\n        });\n      })\n      .catch((errorMessage) => {\n        setActionSuccess(false);\n        openInfoTooltip({\n          message: \"успех\",\n          isSuccess: false,\n        });\n      });\n  };\n\n  const handleTokenCheck = () => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) {\n      auth.checkToken(jwt).then((res) => {\n        setLoggedIn(true);\n        setEmail(res.data.email);\n        loadApiData();\n        history.push(\"/\");\n      });\n    } else {\n      setLoggedIn(false);\n    }\n  };\n\n  const handleSignOut = () => {\n    localStorage.removeItem(\"jwt\");\n    setLoggedIn(false);\n    history.push(\"/sign-in\");\n  };\n\n  // ---------------------------------------------------------------\n\n  // card-handlers\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  };\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((user) => user._id === currentUser._id);\n    handleApiError(api.changeLikeCardStatus(card._id, !isLiked), (newCard) => {\n      setCards(\n        cards.map((oldCard) => (oldCard._id === card._id ? newCard : oldCard))\n      );\n    });\n  };\n  const handleCardDeleteClick = (card) => {\n    setCardCandidateForDeletion(card);\n    setConfirmPopupOpen(true);\n  };\n  const handleCardDelete = (card) => {\n    return handleApiError(api.deleteCard(card._id), () => {\n      setCards(cards.filter((oldCard) => oldCard._id !== card._id));\n      setConfirmPopupOpen(false);\n    });\n  };\n  // ---------------------------------------------------------------\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <ThemeContext.Provider value={currentTheme}>\n        <div\n          className={addThemeAttrs({ theme: currentTheme, classList: \"page\" })}\n        >\n          <Header\n            onThemeSwitch={handleThemeSwitch}\n            onSignOut={handleSignOut}\n            email={email}\n          />\n          {isAppLoading ? (\n            <LoadingSpinner />\n          ) : (\n            <>\n              <Switch>\n                <ProtectedRoute\n                  exact\n                  path=\"/\"\n                  loggedIn={isLoggedIn}\n                  cards={cards}\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddPlaceClick}\n                  onEditAvatar={handleEditAvatarClick}\n                  onCardClick={handleCardClick}\n                  onCardLike={handleCardLike}\n                  onCardDelete={handleCardDeleteClick}\n                  component={Main}\n                />\n                <Route path=\"/sign-in\">\n                  <Login onLogin={handleLogin} />\n                </Route>\n                <Route path=\"/sign-up\">\n                  <Register onRegister={handleRegister} />\n                </Route>\n              </Switch>\n              <Footer />\n\n              <EditProfilePopup\n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                onUpdateUser={handleUpdateUser}\n              />\n              <AddPlacePopup\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlace}\n              />\n              <EditAvatarPopup\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                onUpdateAvatar={handleUpdateAvatar}\n              />\n              <ImagePopup\n                {...selectedCard}\n                isOpen={isImagePopupOpen}\n                onClose={closeAllPopups}\n              />\n              <MessagePopup\n                isOpen={isMessagePopupOpen}\n                onClose={closeMessagePopup}\n                message={popupMessage}\n              />\n              <ConfirmPopup\n                card={cardCandidateForDeletion}\n                onCardDelete={handleCardDelete}\n                isOpen={isConfirmPopupOpen}\n                onClose={closeAllPopups}\n              />\n              <InfoTooltip\n                isOpen={isInfoTooltipPopupOpen}\n                onClose={handleInfoTooltipPopupClose}\n                message={infoTooltipData.message}\n                redirectPath={infoTooltipData.redirectPath}\n                isSuccess={isActionSuccess}\n              />\n            </>\n          )}\n        </div>\n      </ThemeContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Main.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\AddPlacePopup.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\MessagePopup.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Footer.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Header.js",["153","154"],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\LoadingSpinner.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\EditAvatarPopup.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\EditProfilePopup.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\ConfirmPopup.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\ImagePopup.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\utils\\api.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\contexts\\CurrentUserContext.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\PopupWithForm.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Field.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\SubmitButton.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Card.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Popup.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\utils\\utils.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\utils\\constants.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Register.js",["155"],"import React from \"react\";\r\nimport Field from \"./Field\";\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport Form from \"./Form\";\r\nimport { registerSettings } from \"../utils/constants\";\r\nimport ColoredLink from \"./ColoredLink\";\r\nimport ColoredTitle from \"./ColoredTitle\";\r\nimport Fieldset from \"./Fieldset\";\r\nimport { use } from \"react-router-dom\";\r\n\r\nfunction Register(props) {\r\n  // constants\r\n  const {\r\n    classNames,\r\n    emailInput: emailInputSettings,\r\n    passwordInput: passwordInputSettings,\r\n    attributes,\r\n  } = registerSettings;\r\n  // states\r\n  const [emailInput, setEmailInput] = React.useState(\"\");\r\n  const [passwordInput, setPasswordInput] = React.useState(\"\");\r\n\r\n  // handlers\r\n  const handleRegister = (evt) => {\r\n    evt.preventDefault();\r\n    props.onRegister({ email: emailInput.value, password: passwordInput.value });\r\n  };\r\n\r\n  return (\r\n    <section className={classNames.register}>\r\n      <div className={classNames.registerContainer}>\r\n        <Form className={classNames.form} onSubmit={handleRegister}>\r\n          <ColoredTitle className={classNames.title}>\r\n            {attributes.titleText}\r\n          </ColoredTitle>\r\n          <Fieldset className={classNames.fieldset}>\r\n            <Field\r\n              {...emailInputSettings}\r\n              onInput={setEmailInput}\r\n              inputClass={classNames.input}\r\n              fieldClass={classNames.field}\r\n            />\r\n            <Field\r\n              {...passwordInputSettings}\r\n              onInput={setPasswordInput}\r\n              inputClass={classNames.input}\r\n              fieldClass={classNames.field}\r\n            />\r\n          </Fieldset>\r\n          <SubmitButton\r\n            className={classNames.submitButton}\r\n            text={attributes.submitButtonText}\r\n          />\r\n        </Form>\r\n        <div className={classNames.subtextContainer}>\r\n          <ColoredLink className={classNames.link} to={attributes.linkToLogin}>\r\n            Уже зарегистрированы? Войти\r\n          </ColoredLink>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\ProtectedRoute.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\contexts\\ThemeContext.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Form.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\ThemeSwitcher.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\PushButton.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\utils\\theme.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\ColoredLink.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\ColoredTitle.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Fieldset.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Login.js",["156","157"],"import React from \"react\";\r\nimport Field from \"./Field\";\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport Form from \"./Form\";\r\nimport { loginSettings } from \"../utils/constants\";\r\nimport ColoredLink from \"./ColoredLink\";\r\nimport ColoredTitle from \"./ColoredTitle\";\r\nimport Fieldset from \"./Fieldset\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n  // constants\r\n  const {\r\n    classNames,\r\n    emailInput: emailInputSettings,\r\n    passwordInput: passwordInputSettings,\r\n    attributes,\r\n  } = loginSettings;\r\n  // states\r\n  const [emailInput, setEmailInput] = React.useState(\"\");\r\n  const [passwordInput, setPasswordInput] = React.useState(\"\");\r\n\r\n  // handlers\r\n  const handleLogin = (evt) => {\r\n    evt.preventDefault();\r\n    props.onLogin({ email: emailInput.value, password: passwordInput.value });\r\n  };\r\n\r\n  return (\r\n    <section className={classNames.login}>\r\n      <div className={classNames.loginContainer}>\r\n        <Form className={classNames.form} onSubmit={handleLogin}>\r\n          <ColoredTitle className={classNames.title}>\r\n            {attributes.titleText}\r\n          </ColoredTitle>\r\n          <Fieldset className={classNames.fieldset}>\r\n            <Field\r\n              {...emailInputSettings}\r\n              onInput={setEmailInput}\r\n              inputClass={classNames.input}\r\n              fieldClass={classNames.field}\r\n            />\r\n            <Field\r\n              {...passwordInputSettings}\r\n              onInput={setPasswordInput}\r\n              inputClass={classNames.input}\r\n              fieldClass={classNames.field}\r\n            />\r\n          </Fieldset>\r\n          <SubmitButton\r\n            className={classNames.submitButton}\r\n            text={attributes.submitButtonText}\r\n          />\r\n        </Form>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\Navbar.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\utils\\auth.js",[],"C:\\dev\\projects\\react\\react-mesto-auth\\src\\components\\InfoTooltip.js",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":69,"column":6,"nodeType":"164","endLine":69,"endColumn":8,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":8,"column":10,"nodeType":"168","messageId":"169","endLine":8,"endColumn":17},{"ruleId":"166","severity":1,"message":"170","line":8,"column":19,"nodeType":"168","messageId":"169","endLine":8,"endColumn":24},{"ruleId":"166","severity":1,"message":"171","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":13},{"ruleId":"166","severity":1,"message":"172","line":6,"column":8,"nodeType":"168","messageId":"169","endLine":6,"endColumn":19},{"ruleId":"166","severity":1,"message":"173","line":9,"column":10,"nodeType":"168","messageId":"169","endLine":9,"endColumn":23},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'handleTokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["176"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'use' is defined but never used.","'ColoredLink' is defined but never used.","'useRouteMatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},"Update the dependencies array to be: [handleTokenCheck]",{"range":"179","text":"180"},[2650,2652],"[handleTokenCheck]"]