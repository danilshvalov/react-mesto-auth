{"version":3,"sources":["utils/api.js","contexts/ThemeContext.js","utils/constants.js","utils/utils.js","components/Footer.js","images/header-logo.svg","components/ThemeSwitcher.js","components/ColoredLink.js","components/Navbar.js","components/Header.js","components/PushButton.js","components/Popup.js","components/ImagePopup.js","images/avatar.svg","contexts/CurrentUserContext.js","images/not-found.svg","components/Card.js","components/Main.js","components/MessagePopup.js","components/Form.js","components/ColoredTitle.js","components/PopupWithForm.js","components/Field.js","components/SubmitButton.js","components/Fieldset.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/EditAvatarPopup.js","components/LoadingSpinner.js","components/ConfirmPopup.js","components/Register.js","components/ProtectedRoute.js","utils/theme.js","utils/auth.js","components/Login.js","images/success.svg","images/failure.svg","components/InfoTooltip.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","baseUrl","headers","this","_baseUrl","_headers","path","method","body","errorMessage","fetch","URL","then","res","ok","json","Promise","reject","status","sendRequest","name","link","JSON","stringify","id","isLiked","setLike","removeLike","about","avatar","authorization","ThemeContext","React","createContext","DOMProps","colorFormClassNames","registerSettings","register","registerContainer","form","fieldset","input","field","title","submitButton","subtextContainer","type","defaultValue","placeholder","required","titleText","submitButtonDefaultText","submitButtonLoadingText","successMessage","loginSettings","login","loginContainer","addPlacePopupSettings","defaultText","loadingText","minLength","maxLength","editProfilePopupSettings","editAvatarPopupSettings","infoTooltipClassNames","imagePopupClassNames","messagePopupClassNames","confirmPopupClassNames","headerClassNames","navbarClassNames","cardClassNames","popupClassNames","footerClassNames","linkPaths","themeSwitcherClassNames","getOnlyDOMProps","props","attrs","Object","keys","filter","key","some","prop","map","length","assign","addThemeAttrs","theme","classList","split","className","join","Footer","currentTheme","useContext","footerClassName","ThemeSwitcher","onThemeSwitch","themeButtonClassName","onClick","ColoredLink","memo","linkClassName","to","children","Navbar","exact","email","onSignOut","Header","headerClassName","logoClassName","src","logo","alt","PushButton","buttonClassName","Popup","onClose","isOpen","popupWrapperRef","useRef","popupContainerRef","useEffect","document","addEventListener","escapeButtonHandler","evt","removeEventListener","ref","target","current","ImagePopup","CurrentUserContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","isOwn","owner","_id","likes","user","deleteButtonClassName","likeButtonClassName","elementClassName","likeCountClassName","onError","notFoundImagePlug","Main","cards","onEditAvatar","onAddPlace","onEditProfile","defaultAvatar","data","MessagePopup","message","messageBoxClassName","Form","formClassName","ColoredTitle","titleClassName","PopupWithForm","onSubmit","formClass","titleClass","action","noValidate","Field","fieldClass","inputClass","useState","isValid","setValid","value","setValue","setErrorMessage","isErrorVisible","setErrorVisible","inputRef","isVisible","validity","valid","validationMessage","onInput","SubmitButton","isEnabled","undefined","text","Fieldset","fieldsetClassName","EditProfilePopup","onUpdateUser","defaultSubmitButtonText","loadingSubmitButtonText","nameInput","setNameInput","descriptionInput","setDescriptionInput","submitButtonText","setSubmitButtonText","every","preventDefault","finally","AddPlacePopup","titleInput","setTitleInput","linkInput","setLinkInput","EditAvatarPopup","onUpdateAvatar","avatarInput","setAvatarInput","LoadingSpinner","spinnerClassName","ConfirmPopup","Register","classNames","emailInputSettings","passwordInputSettings","attributes","emailInput","setEmailInput","passwordInput","setPasswordInput","onRegister","password","ProtectedRoute","Component","component","loggedIn","isAvailableTheme","item","updateUserTheme","localStorage","setItem","auth","code","errorIdentifier","_errorIdentifier","token","Authorization","Login","onLogin","InfoTooltip","infoTooltipClassName","redirectPath","isSuccess","successLogo","failureLogo","App","isAppLoading","setIsAppLoading","isDOMLoading","setDOMLoading","isApiDataLoading","setApiDataLoading","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isConfirmPopupOpen","setConfirmPopupOpen","isMessagePopupOpen","setMessagePopupOpen","isImagePopupOpen","setImagePopupOpen","isInfoTooltipPopupOpen","setInfoTooltipPopupOpen","selectedCard","setSelectedCard","popupMessage","setPopupMessage","infoTooltipData","setInfoTooltipData","isActionSuccess","setActionSuccess","setCurrentUser","setEmail","getItem","setCurrentTheme","setCards","cardCandidateForDeletion","setCardCandidateForDeletion","isLoggedIn","setLoggedIn","history","useHistory","jwt","checkToken","handleApiError","all","getUserInfo","getInitialCards","result","userInfo","initialCards","catch","removeItem","push","handleTokenCheck","closeAllPopups","updateToken","openInfoTooltip","promise","callback","error","TypeError","Provider","changeLikeCardStatus","newCard","oldCard","authorize","setUserInfo","addPlace","changeAvatar","deleteCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uOA0GeA,EATH,I,WAhGV,cAAmC,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAAW,oBAChCC,KAAKC,SAAWH,EAChBE,KAAKE,SAAWH,E,2DAGyC,IAA7CI,EAA4C,EAA5CA,KAA4C,IAAtCC,cAAsC,MAA7B,MAA6B,EAAtBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,aACxC,OAAOC,MAAM,IAAIC,IAAIL,EAAMH,KAAKC,UAAW,CACzCG,OAAQA,EACRL,QAASC,KAAKE,SACdG,KAAMA,IACLI,MAAK,SAACC,GACP,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAR,UAAkBR,EAAlB,sEAA+CI,EAAIK,c,wCAK5D,OAAOf,KAAKgB,YAAY,CACtBb,KAAM,QACNG,aAAc,iN,kCAIQ,IAAfW,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACf,OAAOlB,KAAKgB,YAAY,CACtBb,KAAM,QACNC,OAAQ,OACRC,KAAMc,KAAKC,UAAU,CACnBH,OACAC,SAEFZ,aAAc,mO,iCAIPe,GACT,OAAOrB,KAAKgB,YAAY,CACtBb,KAAK,SAAD,OAAWkB,GACfjB,OAAQ,SACRE,aAAc,uN,8BAIVe,GACN,OAAOrB,KAAKgB,YAAY,CACtBb,KAAK,eAAD,OAAiBkB,GACrBjB,OAAQ,MACRE,aAAc,4N,iCAIPe,GACT,OAAOrB,KAAKgB,YAAY,CACtBb,KAAK,eAAD,OAAiBkB,GACrBjB,OAAQ,SACRE,aAAc,0M,2CAIGe,EAAIC,GACvB,OAAOA,EAAUtB,KAAKuB,QAAQF,GAAMrB,KAAKwB,WAAWH,K,oCAIpD,OAAOrB,KAAKgB,YAAY,CACtBb,KAAM,WACNG,aAAc,4P,qCAIY,IAAhBW,EAAe,EAAfA,KAAMQ,EAAS,EAATA,MAClB,OAAOzB,KAAKgB,YAAY,CACtBb,KAAM,WACNC,OAAQ,QACRC,KAAMc,KAAKC,UAAU,CACnBH,KAAMA,EACNQ,MAAOA,IAETnB,aAAc,qP,mCAILY,GACX,OAAOlB,KAAKgB,YAAY,CACtBb,KAAM,kBACNC,OAAQ,QACRC,KAAMc,KAAKC,UAAU,CACnBM,OAAQR,IAEVZ,aAAc,+N,KAKR,CAAQ,CAClBR,QAAS,+CACTC,QAAS,CACP4B,cAAe,uCACf,eAAgB,qCCnGLC,EADMC,IAAMC,gBCDdC,EAAW,CACtB,OACA,SACA,gBACA,YACA,SACA,kBACA,oBACA,MACA,QACA,eACA,YACA,WACA,cACA,cACA,YACA,UACA,UACA,OACA,QACA,YACA,OACA,UACA,UACA,UACA,kBACA,cACA,WACA,SACA,cACA,OACA,WACA,UACA,QACA,MACA,WACA,WACA,YACA,WACA,UACA,MACA,OACA,aACA,cACA,aACA,iBACA,aACA,cACA,UACA,SACA,SACA,OACA,OACA,WACA,UACA,YACA,OACA,KACA,YACA,QACA,SACA,WACA,UACA,YACA,WACA,OACA,QACA,OACA,OACA,OACA,WACA,MACA,YACA,QACA,aACA,SACA,MACA,YACA,WACA,QACA,OACA,aACA,OACA,UACA,UACA,OACA,cACA,SACA,UACA,aACA,WACA,MACA,WACA,OACA,OACA,UACA,UACA,QACA,SACA,YACA,WACA,WACA,QACA,OACA,QACA,WACA,OACA,aACA,MACA,SACA,SACA,QACA,OACA,QACA,WACA,SACA,QACA,YACA,OACA,gBACA,SACA,QACA,QACA,QACA,OACA,SACA,QACA,UACA,SACA,UACA,UACA,WACA,mBACA,qBACA,sBACA,YACA,aACA,UACA,UACA,SACA,WACA,UACA,WACA,UACA,gBACA,gBACA,SACA,YACA,cACA,aACA,cACA,aACA,cACA,SACA,cACA,eACA,eACA,cACA,aACA,cACA,YACA,WACA,gBACA,aACA,cACA,eACA,mBACA,iBACA,uBACA,mBAoBWC,EACL,kBADKA,EAEJ,iCAFIA,EAGD,gCAHCA,EAIJ,0BAJIA,EAKJ,oBALIA,EAMG,0CAGHC,EACC,CACVC,SAAU,WACVC,kBAAmB,sBACnBC,KAAM,uCACNC,SAAU,sCACVC,MAAO,uDACPC,MAAO,gDACPC,MAAO,0CACPC,aACE,wEACFC,iBAAkB,wDAClBxB,KAAM,0BAZGe,EAcC,CACVhB,KAAM,QACN0B,KAAM,QACN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","file":"static/js/main.65c77681.chunk.js","sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  sendRequest({ path, method = \"GET\", body, errorMessage }) {\n    return fetch(new URL(path, this._baseUrl), {\n      method: method,\n      headers: this._headers,\n      body: body,\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`${errorMessage}. Код ошибки: ${res.status}`);\n    });\n  }\n\n  getInitialCards() {\n    return this.sendRequest({\n      path: \"cards\",\n      errorMessage: \"При запросе карточек произошла ошибка\",\n    });\n  }\n\n  addPlace({ name, link }) {\n    return this.sendRequest({\n      path: \"cards\",\n      method: \"POST\",\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n      errorMessage: \"При добавлении карточки произошла ошибка\",\n    });\n  }\n\n  deleteCard(id) {\n    return this.sendRequest({\n      path: `cards/${id}`,\n      method: \"DELETE\",\n      errorMessage: \"При удалении карточки произошла ошибка\",\n    });\n  }\n\n  setLike(id) {\n    return this.sendRequest({\n      path: `cards/likes/${id}`,\n      method: \"PUT\",\n      errorMessage: \"При попытке поставить like произошла ошибка\",\n    });\n  }\n\n  removeLike(id) {\n    return this.sendRequest({\n      path: `cards/likes/${id}`,\n      method: \"DELETE\",\n      errorMessage: \"При попытке убрать like произошла ошибка\",\n    });\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    return isLiked ? this.setLike(id) : this.removeLike(id);\n  }\n\n  getUserInfo() {\n    return this.sendRequest({\n      path: \"users/me\",\n      errorMessage: \"При получении данных профиля произошла ошибка\",\n    });\n  }\n\n  setUserInfo({ name, about }) {\n    return this.sendRequest({\n      path: \"users/me\",\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n      errorMessage: \"При редактировании профиля произошла ошибка\",\n    });\n  }\n\n  changeAvatar(link) {\n    return this.sendRequest({\n      path: \"users/me/avatar\",\n      method: \"PATCH\",\n      body: JSON.stringify({\n        avatar: link,\n      }),\n      errorMessage: \"При обновлении аватара произошла ошибка\",\n    });\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-19/\",\n  headers: {\n    authorization: \"68d238d8-54dd-4a8c-9a47-e308386a3ea7\",\n    \"Content-Type\": \"application/json; charset=utf-8\",\n  },\n});\n\n\nexport default api;\n","import React from \"react\";\r\nconst ThemeContext = React.createContext();\r\nexport default ThemeContext;","export const DOMProps = [\n  \"abbr\",\n  \"accept\",\n  \"acceptCharset\",\n  \"accessKey\",\n  \"action\",\n  \"allowFullScreen\",\n  \"allowTransparency\",\n  \"alt\",\n  \"async\",\n  \"autoComplete\",\n  \"autoFocus\",\n  \"autoPlay\",\n  \"cellPadding\",\n  \"cellSpacing\",\n  \"challenge\",\n  \"charset\",\n  \"checked\",\n  \"cite\",\n  \"class\",\n  \"className\",\n  \"cols\",\n  \"colSpan\",\n  \"command\",\n  \"content\",\n  \"contentEditable\",\n  \"contextMenu\",\n  \"controls\",\n  \"coords\",\n  \"crossOrigin\",\n  \"data\",\n  \"dateTime\",\n  \"default\",\n  \"defer\",\n  \"dir\",\n  \"disabled\",\n  \"download\",\n  \"draggable\",\n  \"dropzone\",\n  \"encType\",\n  \"for\",\n  \"form\",\n  \"formAction\",\n  \"formEncType\",\n  \"formMethod\",\n  \"formNoValidate\",\n  \"formTarget\",\n  \"frameBorder\",\n  \"headers\",\n  \"height\",\n  \"hidden\",\n  \"high\",\n  \"href\",\n  \"hrefLang\",\n  \"htmlFor\",\n  \"httpEquiv\",\n  \"icon\",\n  \"id\",\n  \"inputMode\",\n  \"isMap\",\n  \"itemId\",\n  \"itemProp\",\n  \"itemRef\",\n  \"itemScope\",\n  \"itemType\",\n  \"kind\",\n  \"label\",\n  \"lang\",\n  \"list\",\n  \"loop\",\n  \"manifest\",\n  \"max\",\n  \"maxLength\",\n  \"media\",\n  \"mediaGroup\",\n  \"method\",\n  \"min\",\n  \"minLength\",\n  \"multiple\",\n  \"muted\",\n  \"name\",\n  \"noValidate\",\n  \"open\",\n  \"optimum\",\n  \"pattern\",\n  \"ping\",\n  \"placeholder\",\n  \"poster\",\n  \"preload\",\n  \"radioGroup\",\n  \"readOnly\",\n  \"rel\",\n  \"required\",\n  \"role\",\n  \"rows\",\n  \"rowSpan\",\n  \"sandbox\",\n  \"scope\",\n  \"scoped\",\n  \"scrolling\",\n  \"seamless\",\n  \"selected\",\n  \"shape\",\n  \"size\",\n  \"sizes\",\n  \"sortable\",\n  \"span\",\n  \"spellCheck\",\n  \"src\",\n  \"srcDoc\",\n  \"srcSet\",\n  \"start\",\n  \"step\",\n  \"style\",\n  \"tabIndex\",\n  \"target\",\n  \"title\",\n  \"translate\",\n  \"type\",\n  \"typeMustMatch\",\n  \"useMap\",\n  \"value\",\n  \"width\",\n  \"wmode\",\n  \"wrap\",\n  \"onCopy\",\n  \"onCut\",\n  \"onPaste\",\n  \"onLoad\",\n  \"onError\",\n  \"onWheel\",\n  \"onScroll\",\n  \"onCompositionEnd\",\n  \"onCompositionStart\",\n  \"onCompositionUpdate\",\n  \"onKeyDown\",\n  \"onKeyPress\",\n  \"onKeyUp\",\n  \"onFocus\",\n  \"onBlur\",\n  \"onChange\",\n  \"onInput\",\n  \"onSubmit\",\n  \"onClick\",\n  \"onContextMenu\",\n  \"onDoubleClick\",\n  \"onDrag\",\n  \"onDragEnd\",\n  \"onDragEnter\",\n  \"onDragExit\",\n  \"onDragLeave\",\n  \"onDragOver\",\n  \"onDragStart\",\n  \"onDrop\",\n  \"onMouseDown\",\n  \"onMouseEnter\",\n  \"onMouseLeave\",\n  \"onMouseMove\",\n  \"onMouseOut\",\n  \"onMouseOver\",\n  \"onMouseUp\",\n  \"onSelect\",\n  \"onTouchCancel\",\n  \"onTouchEnd\",\n  \"onTouchMove\",\n  \"onTouchStart\",\n  \"onAnimationStart\",\n  \"onAnimationEnd\",\n  \"onAnimationIteration\",\n  \"onTransitionEnd\",\n];\n\nexport const buttonClassNames = {\n  deleteButton: \"button delete-button\",\n  submitButton: \"button submit-button\",\n  addButton: \"button add-button\",\n  likeButton: \"button like-button\",\n  closeButton: \"button close-button\",\n  editButton: \"button edit-button\",\n};\n\nexport const transparentFormClassNames = {\n  form: \"form transparent-form\",\n  input: \"field__input transparent-form__input\",\n  fieldset: \"fieldset, transparent-form__fieldset\",\n  field: \"field transparent-form__field\",\n  submitButton: \"submit-button transparent-form__submit-button\",\n};\n\nexport const colorFormClassNames = {\n  form: \"form color-form\",\n  input: \"field__input color-form__input\",\n  fieldset: \"fieldset color-form__fieldset\",\n  field: \"field color-form__field\",\n  title: \"color-form__title\",\n  submitButton: \"submit-button color-form__submit-button\",\n};\n\nexport const registerSettings = {\n  classNames: {\n    register: \"register\",\n    registerContainer: \"register__container\",\n    form: \"form transparent-form register__form\",\n    fieldset: \"fieldset transparent-form__fieldset\",\n    input: \"field__input transparent-form__input register__input\",\n    field: \"field transparent-form__field register__field\",\n    title: \"transparent-form__title register__title\",\n    submitButton:\n      \"submit-button transparent-form__submit-button register__submit-button\",\n    subtextContainer: \"transparent-form__subtext register__subtext-container\",\n    link: \"transparent-form__link\",\n  },\n  emailInput: {\n    name: \"email\",\n    type: \"email\",\n    defaultValue: \"\",\n    placeholder: \"Email\",\n    required: true,\n  },\n  passwordInput: {\n    name: \"password\",\n    type: \"password\",\n    defaultValue: \"\",\n    placeholder: \"Пароль\",\n    required: true,\n  },\n  attributes: {\n    titleText: \"Регистрация\",\n    submitButtonDefaultText: \"Зарегистрироваться\",\n    submitButtonLoadingText: \"Регистрируем...\",\n    successMessage: \"Вы успешно зарегистрировались!\"\n  },\n};\n\nexport const loginSettings = {\n  classNames: {\n    login: \"login\",\n    loginContainer: \"login__container\",\n    form: \"form transparent-form login__form\",\n    fieldset: \"fieldset transparent-form__fieldset\",\n    input: \"field__input transparent-form__input login__input\",\n    field: \"field transparent-form__field login__field\",\n    title: \"transparent-form__title login__title\",\n    submitButton:\n      \"submit-button transparent-form__submit-button login__submit-button\",\n  },\n  emailInput: {\n    name: \"email\",\n    type: \"email\",\n    defaultValue: \"\",\n    placeholder: \"Email\",\n    required: true,\n  },\n  passwordInput: {\n    name: \"password\",\n    type: \"password\",\n    defaultValue: \"\",\n    placeholder: \"Пароль\",\n    required: true,\n  },\n  attributes: {\n    titleText: \"Вход\",\n    submitButtonDefaultText: \"Войти\",\n    submitButtonLoadingText: \"Входим...\",\n    successMessage: \"Вы успешно авторизовались!\"\n  },\n};\n\nexport const addPlacePopupSettings = {\n  popup: {\n    name: \"add-element\",\n    title: \"Новое место\",\n  },\n  submitButton: {\n    defaultText: \"Создать\",\n    loadingText: \"Создаем...\",\n  },\n  titleInput: {\n    name: \"title\",\n    type: \"text\",\n    defaultValue: \"\",\n    placeholder: \"Название\",\n    minLength: \"2\",\n    maxLength: \"30\",\n    required: true,\n  },\n  linkInput: {\n    name: \"link\",\n    type: \"url\",\n    defaultValue: \"\",\n    placeholder: \"Ссылка на картинку\",\n    required: true,\n  },\n  fieldsetClassName: \"popup__add-element-fieldset\"\n};\n\nexport const editProfilePopupSettings = {\n  popup: {\n    name: \"edit-profile\",\n    title: \"Редактировать профиль\",\n  },\n  submitButton: {\n    defaultText: \"Сохранить\",\n    loadingText: \"Сохранение...\",\n  },\n  nameInput: {\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Имя\",\n    minLength: \"2\",\n    maxLength: \"40\",\n    required: true,\n  },\n  descriptionInput: {\n    name: \"job\",\n    type: \"text\",\n    placeholder: \"Деятельность\",\n    required: true,\n    minLength: \"2\",\n    maxLength: \"200\",\n  },\n  fieldsetClassName: \"popup__edit-profile-fieldset\"\n};\n\nexport const editAvatarPopupSettings = {\n  popup: {\n    name: \"change-avatar\",\n    title: \"Обновить аватар\",\n  },\n  submitButton: {\n    defaultText: \"Сохранить\",\n    loadingText: \"Сохранение...\",\n  },\n  avatarInput: {\n    name: \"avatar\",\n    type: \"url\",\n    defaultValue: \"\",\n    placeholder: \"Ссылка на картинку\",\n    required: true,\n  },\n  fieldsetClassName: \"popup__change-avatar-fieldset\"\n};\n\nexport const infoTooltipClassNames = {\n  infoTooltip: \"info-tooltip\",\n  icon: \"info-tooltip__icon\",\n  text: \"info-tooltip__text\",\n};\n\nexport const imagePopupClassNames = {\n  picture: \"picture popup__picture\",\n  image: \"picture__image\",\n  description: \"picture__description\",\n};\n\nexport const messagePopupClassNames = {\n  name: \"message\",\n  container: \"message-box popup__message-box\",\n  textContainer: \"message-box__text\",\n  closeButton: \"button button_small-size button_invert-color close-button popup__close-button\",\n};\n\nexport const confirmPopupClassNames = {\n  popup: {\n    name: \"confirm\",\n    title: \"Вы уверены?\",\n  },\n  submitButton: {\n    defaultText: \"Да\",\n    loadingText: \"Удаление...\",\n  },\n};\n\nexport const headerClassNames = {\n  header: \"header\",\n  logo: \"header__logo\",\n  container: \"header__container\",\n  item: \"header__item\"\n};\n\nexport const navbarClassNames = {\n  navbar: \"navbar\",\n  link: \"navbar__link\",\n  dimLink: \"navbar__link navbar__link_type_dim\",\n  item: \"navbar__item\",\n  container: \"navbar__container\",\n  email: \"navbar__email\"\n};\n\nexport const cardClassNames = {\n  element: \"element\",\n  image: \"element__image\",\n  deleteButton: \"button delete-button element__delete-button\",\n  deleteButtonHiddenClass: \"delete-button_hidden\",\n  likeButton: \"button like-button element__like-button\",\n  likeButtonActiveClass: \"like-button_active\",\n  sideBar: \"element__sidebar\",\n  title: \"element__title\",\n  likeContainer: \"element__like-container\",\n  likeCount: \"element__like-count\",\n};\n\nexport const popupClassNames = {\n  popup: \"popup\",\n  popupOpenedClass: \"popup_opened\",\n  container: \"popup__container\",\n  closeButton: \"button close-button popup__close-button\"\n}\n\nexport const footerClassNames = {\n  footer: \"footer\",\n  copyright: \"footer__copyright\"\n}\n\nexport const loadingSpinnerClassName = \"loading-spinner\";\n\nexport const linkPaths = {\n  loginPage: \"/sign-in\",\n  mainPage: \"/\",\n  registerPage: \"/sign-up\",\n};\n\nexport const themeSwitcherClassNames = {\n  themeButton: \"button theme-button\",\n  themeSwitcher: \"theme-switcher\"\n};","import { DOMProps } from \"./constants\";\n\nconst getOnlyDOMProps = (props) => {\n  const attrs = Object.keys(props)\n    .filter((key) => DOMProps.some((prop) => prop === key))\n    .map((key) => ({ [key]: props[key] }));\n  if (attrs.length > 0) {\n    return Object.assign(...attrs);\n  }\n};\n\nconst addThemeAttrs = ({ theme, classList }) => {\n  if (classList) {\n    return [\n      ...classList\n        .split(\" \")\n        .map((className) => `${className} ${className}_theme_${theme}`),\n      \"smooth-appearance\",\n    ].join(\" \");\n  }\n};\n\nexport { getOnlyDOMProps, addThemeAttrs };\n","import React from \"react\";\nimport ThemeContext from \"../contexts/ThemeContext\";\nimport { footerClassNames } from \"../utils/constants\";\nimport { addThemeAttrs } from \"../utils/utils\";\n\nfunction Footer() {\n  // contexts\n  const currentTheme = React.useContext(ThemeContext);\n\n  // classes\n  const footerClassName = addThemeAttrs({\n    theme: currentTheme,\n    classList: footerClassNames.footer,\n  });\n\n  return (\n    <footer className={footerClassName}>\n      <p className={footerClassNames.copyright}>© 2020 — 2021 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/header-logo.c2821b38.svg\";","import React from \"react\";\r\nimport ThemeContext from \"../contexts/ThemeContext\";\r\nimport { themeSwitcherClassNames } from \"../utils/constants\";\r\nimport { addThemeAttrs } from \"../utils/utils\";\r\n\r\nfunction ThemeSwitcher({ onThemeSwitch }) {\r\n  // contexts\r\n  const currentTheme = React.useContext(ThemeContext);\r\n\r\n  // classes\r\n  const themeButtonClassName = addThemeAttrs({\r\n    theme: currentTheme,\r\n    classList: themeSwitcherClassNames.themeButton,\r\n  });\r\n\r\n  const handleThemeSwitch = () => {\r\n    onThemeSwitch(currentTheme === \"dark\" ? \"light\" : \"dark\");\r\n  };\r\n\r\n  return (\r\n    <div className={themeSwitcherClassNames.themeSwitcher}>\r\n      <button className={themeButtonClassName} onClick={handleThemeSwitch} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ThemeSwitcher;\r\n","import React from \"react\";\r\nimport ThemeContext from \"../contexts/ThemeContext\";\r\nimport { addThemeAttrs, getOnlyDOMProps } from \"../utils/utils\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst ColoredLink = React.memo((props) => {\r\n  // contexts\r\n  const currentTheme = React.useContext(ThemeContext);\r\n\r\n  // classNames\r\n  const linkClassName = addThemeAttrs({\r\n    theme: currentTheme,\r\n    classList: props.className,\r\n  });\r\n\r\n  return (\r\n    <NavLink\r\n      to={props.to}\r\n      {...getOnlyDOMProps(props)}\r\n      className={linkClassName}\r\n    >\r\n      {props.children}\r\n    </NavLink>\r\n  );\r\n});\r\n\r\nexport default ColoredLink;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { navbarClassNames, linkPaths } from \"../utils/constants\";\r\nimport ColoredLink from \"./ColoredLink\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav className={navbarClassNames.navbar}>\r\n      <ul className={navbarClassNames.container}>\r\n        <Route exact path={linkPaths.mainPage}>\r\n          <li className={navbarClassNames.item}>\r\n            <span className={navbarClassNames.email}>{props.email}</span>\r\n          </li>\r\n          <li className={navbarClassNames.item}>\r\n            <ColoredLink\r\n              to={linkPaths.loginPage}\r\n              className={navbarClassNames.dimLink}\r\n              onClick={props.onSignOut}\r\n            >\r\n              Выйти\r\n            </ColoredLink>\r\n          </li>\r\n        </Route>\r\n\r\n        <Route path={linkPaths.registerPage}>\r\n          <li className={navbarClassNames.item}>\r\n            <ColoredLink\r\n              to={linkPaths.loginPage}\r\n              className={navbarClassNames.link}\r\n            >\r\n              Войти\r\n            </ColoredLink>\r\n          </li>\r\n        </Route>\r\n\r\n        <Route path={linkPaths.loginPage}>\r\n          <li className={navbarClassNames.item}>\r\n            <ColoredLink\r\n              to={linkPaths.registerPage}\r\n              className={navbarClassNames.link}\r\n            >\r\n              Регистрация\r\n            </ColoredLink>\r\n          </li>\r\n        </Route>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport logo from \"../images/header-logo.svg\";\nimport ThemeSwitcher from \"./ThemeSwitcher\";\nimport ThemeContext from \"../contexts/ThemeContext\";\nimport { addThemeAttrs } from \"../utils/utils\";\nimport { headerClassNames } from \"../utils/constants\";\nimport Navbar from \"./Navbar\";\n\nfunction Header(props) {\n  // contexts\n  const currentTheme = React.useContext(ThemeContext);\n\n  // classes\n  const headerClassName = addThemeAttrs({\n    theme: currentTheme,\n    classList: headerClassNames.header,\n  });\n\n  const logoClassName = addThemeAttrs({\n    theme: currentTheme,\n    classList: headerClassNames.logo,\n  });\n\n  return (\n    <header className={headerClassName}>\n      <img className={logoClassName} src={logo} alt=\"Места России\" />\n      <div className={headerClassNames.container}>\n        <div className={headerClassNames.item}>\n          <ThemeSwitcher onThemeSwitch={props.onThemeSwitch} />\n        </div>\n        <div className={headerClassNames.item}>\n          <Navbar email={props.email} onSignOut={props.onSignOut} />\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\r\nimport ThemeContext from \"../contexts/ThemeContext\";\r\nimport { getOnlyDOMProps, addThemeAttrs } from \"../utils/utils\";\r\n\r\nconst PushButton = React.memo((props) => {\r\n  const currentTheme = React.useContext(ThemeContext);\r\n\r\n  const buttonClassName = addThemeAttrs({\r\n    theme: currentTheme,\r\n    classList: props.className,\r\n  });\r\n\r\n  return (\r\n    <button {...getOnlyDOMProps(props)} className={buttonClassName}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n});\r\n\r\nexport default PushButton;\r\n","import React from \"react\";\nimport PushButton from \"./PushButton\";\nimport { popupClassNames } from \"../utils/constants\";\n\nfunction Popup({ name, children, onClose, isOpen }) {\n  // constants\n  const escapeKeyCode = \"Escape\";\n\n  // refs\n  const popupWrapperRef = React.useRef();\n  const popupContainerRef = React.useRef();\n\n  // handlers\n\n  const handleClose = (evt) => {\n    if (\n      evt.target === popupWrapperRef.current ||\n      evt.target === popupContainerRef.current\n    ) {\n      onClose();\n    }\n  };\n\n  // effects\n  React.useEffect(() => {\n    const escapeButtonHandler = (evt) => {\n      if (evt.key === escapeKeyCode) {\n        onClose();\n        document.removeEventListener(\"keydown\", escapeButtonHandler);\n      }\n    };\n    if (isOpen) {\n      document.addEventListener(\"keydown\", escapeButtonHandler);\n    }\n  }, [isOpen, onClose]);\n  return (\n    <div\n      className={`${popupClassNames.popup} ${\n        popupClassNames.popup\n      }_type_${name} ${isOpen ? popupClassNames.popupOpenedClass : \"\"}`}\n      ref={popupWrapperRef}\n      onClick={handleClose}\n    >\n      <div className={popupClassNames.container} ref={popupContainerRef}>\n        {children}\n        <PushButton className={popupClassNames.closeButton} onClick={onClose} />\n      </div>\n    </div>\n  );\n}\n\nexport default Popup;\n","import Popup from \"./Popup\";\nimport { imagePopupClassNames } from \"../utils/constants\";\n\nfunction ImagePopup({ name, link, isOpen, onClose }) {\n  return (\n    <Popup name={name} isOpen={isOpen} onClose={onClose}>\n      <div className={imagePopupClassNames.picture}>\n        <img className={imagePopupClassNames.image} src={link} alt={name} />\n        <p className={imagePopupClassNames.description}>{name}</p>\n      </div>\n    </Popup>\n  );\n}\n\nexport default ImagePopup;\n","export default __webpack_public_path__ + \"static/media/avatar.c2fc30b5.svg\";","import React from \"react\";\nconst CurrentUserContext = React.createContext();\nexport default CurrentUserContext;\n","export default __webpack_public_path__ + \"static/media/not-found.6c84ffca.svg\";","import React from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport ThemeContext from \"../contexts/ThemeContext\";\nimport { cardClassNames } from \"../utils/constants\";\nimport { addThemeAttrs } from \"../utils/utils\";\nimport PushButton from \"./PushButton\";\nimport notFoundImagePlug from \"../images/not-found.svg\";\n\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const currentTheme = React.useContext(ThemeContext);\n\n  // bool variables\n  const isOwn = card.owner._id === currentUser._id;\n  const isLiked = card.likes.some((user) => user._id === currentUser._id);\n\n  // classes\n  const deleteButtonClassName = `${addThemeAttrs({\n    theme: currentTheme,\n    classList: cardClassNames.deleteButton,\n  })} ${isOwn ? \"\" : cardClassNames.deleteButtonHiddenClass}`;\n\n  const likeButtonClassName = `${addThemeAttrs({\n    theme: currentTheme,\n    classList: cardClassNames.likeButton,\n  })} ${isLiked ? cardClassNames.likeButtonActiveClass : \"\"}`;\n\n  const elementClassName = addThemeAttrs({\n    theme: currentTheme,\n    classList: cardClassNames.element,\n  });\n\n  // handlers\n  const handleClick = () => {\n    onCardClick(card);\n  };\n\n  const handleLike = () => {\n    onCardLike(card);\n  };\n\n  const handleDelete = () => {\n    onCardDelete(card);\n  };\n\n  const handleImageLoadError = (evt) => {\n    card.link = notFoundImagePlug;\n    evt.target.src = notFoundImagePlug;\n  };\n\n  const likeCountClassName = addThemeAttrs({\n    theme: currentTheme,\n    classList: cardClassNames.likeCount,\n  });\n\n  return (\n    <article className={elementClassName}>\n      <img\n        className={cardClassNames.image}\n        src={card.link}\n        alt={card.name}\n        onClick={handleClick}\n        onError={handleImageLoadError}\n      />\n      <div className={cardClassNames.sideBar}>\n        <h3 className={cardClassNames.title}>{card.name}</h3>\n        <div className={cardClassNames.likeContainer}>\n          <PushButton className={likeButtonClassName} onClick={handleLike} />\n          <span className={likeCountClassName}>{card.likes.length}</span>\n        </div>\n        <PushButton className={deleteButtonClassName} onClick={handleDelete} />\n      </div>\n    </article>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport defaultAvatar from \"../images/avatar.svg\";\nimport Card from \"./Card\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport ThemeContext from \"../contexts/ThemeContext\";\nimport PushButton from \"./PushButton\";\n\nfunction Main({\n  cards,\n  onEditAvatar,\n  onAddPlace,\n  onCardClick,\n  onCardLike,\n  onCardDelete,\n  onEditProfile,\n}) {\n  // contexts\n  const currentUser = React.useContext(CurrentUserContext);\n  const currentTheme = React.useContext(ThemeContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__image-container\">\n          <img\n            className=\"profile__avatar\"\n            src={currentUser.avatar || defaultAvatar}\n            alt=\"Аватар пользователя\"\n          />\n          <PushButton\n            className=\"button profile__edit-avatar-button\"\n            onClick={onEditAvatar}\n          />\n        </div>\n        <div className=\"profile__text\">\n          <div className=\"profile__name-container\">\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\n            <PushButton\n              className=\"button edit-button profile__edit-button\"\n              onClick={onEditProfile}\n            />\n          </div>\n          <p className=\"profile__about\">{currentUser.about}</p>\n        </div>\n        <PushButton\n          className=\"button add-button profile__add-button\"\n          onClick={onAddPlace}\n        />\n      </section>\n\n      <section className={`elements elements_theme_${currentTheme}`}>\n        {cards.map((data) => {\n          return (\n            <Card\n              card={data}\n              key={data._id}\n              onCardLike={onCardLike}\n              onCardClick={onCardClick}\n              onCardDelete={onCardDelete}\n            />\n          );\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport Popup from \"./Popup\";\nimport { messagePopupClassNames } from \"../utils/constants\";\nimport { addThemeAttrs } from \"../utils/utils\";\nimport ThemeContext from \"../contexts/ThemeContext\";\n\nfunction MessagePopup({ message, onClose, isOpen }) {\n  // contexts\n  const currentTheme = React.useContext(ThemeContext);\n\n  // classes\n  const messageBoxClassName = addThemeAttrs({\n    theme: currentTheme,\n    classList: messagePopupClassNames.container,\n  });\n\n  return (\n    <Popup name={messagePopupClassNames.name} onClose={onClose} isOpen={isOpen}>\n      <div className={messageBoxClassName}>\n        <span className={messagePopupClassNames.textContainer}>{message}</span>\n      </div>\n    </Popup>\n  );\n}\n\nexport default MessagePopup;\n","import React from \"react\";\r\nimport ThemeContext from \"../contexts/ThemeContext\";\r\nimport { addThemeAttrs, getOnlyDOMProps } from \"../utils/utils\";\r\n\r\nfunction Form(props) {\r\n  // contexts\r\n  const currentTheme = React.useContext(ThemeContext);\r\n\r\n  // classes\r\n  const formClassName = addThemeAttrs({\r\n    theme: currentTheme,\r\n    classList: props.className,\r\n  });\r\n  return (\r\n    <form {...getOnlyDOMProps(props)} className={formClassName}>\r\n      {props.children}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport ThemeContext from \"../contexts/ThemeContext\";\r\nimport { addThemeAttrs, getOnlyDOMProps } from \"../utils/utils\";\r\n\r\nconst ColoredTitle = React.memo((props) => {\r\n  // contexts\r\n  const currentTheme = React.useContext(ThemeContext);\r\n\r\n  // classNames\r\n  const titleClassName = addThemeAttrs({\r\n    theme: currentTheme,\r\n    classList: props.className,\r\n  });\r\n  return (\r\n    <h2 {...getOnlyDOMProps(props)} className={titleClassName}>\r\n      {props.children}\r\n    </h2>\r\n  );\r\n});\r\n\r\nexport default ColoredTitle;\r\n","import React from \"react\";\nimport Popup from \"./Popup\";\nimport Form from \"./Form\";\nimport { popupClassNames } from \"../utils/constants\";\nimport ColoredTitle from \"./ColoredTitle\";\n\nfunction PopupWithForm({\n  name,\n  title,\n  children,\n  onClose,\n  isOpen,\n  onSubmit,\n  formClass,\n  titleClass,\n  submitButton,\n}) {\n  return (\n    <Popup name={name} isOpen={isOpen} onClose={onClose}>\n      <Form\n        className={`${popupClassNames.popup}__${name}-form ${formClass}`}\n        method=\"POST\"\n        action=\"/\"\n        name={name}\n        noValidate\n        onSubmit={onSubmit}\n      >\n        <ColoredTitle className={titleClass}>{title}</ColoredTitle>\n        {children}\n        {submitButton}\n      </Form>\n    </Popup>\n  );\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\nimport ThemeContext from \"../contexts/ThemeContext\";\nimport { getOnlyDOMProps, addThemeAttrs } from \"../utils/utils\";\n\nconst Field = React.memo((props) => {\n  // contexts\n  const currentTheme = React.useContext(ThemeContext);\n\n  // classes\n  const fieldClass = addThemeAttrs({\n    theme: currentTheme,\n    classList: props.fieldClass,\n  });\n  const inputClass = addThemeAttrs({\n    theme: currentTheme,\n    classList: props.inputClass,\n  });\n\n  // states\n  const [isValid, setValid] = React.useState(false);\n  const [value, setValue] = React.useState(props.defaultValue);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const [isErrorVisible, setErrorVisible] = React.useState(false);\n\n  // refs\n  const inputRef = React.useRef();\n\n  // effects\n  React.useEffect(() => {\n    if (props.isVisible) {\n      inputRef.current.value = props.defaultValue;\n      setValue(inputRef.current.value);\n      setValid(inputRef.current.validity.valid);\n      setErrorMessage(inputRef.current.validationMessage);\n      setErrorVisible(false);\n    }\n  }, [props.isVisible, props.defaultValue]);\n  React.useEffect(() => {\n    props.onInput({ value, isValid });\n  }, [value, isValid, props]);\n\n  // handlers\n  const handleInput = (evt) => {\n    const target = evt.target;\n    setValue(target.value);\n    setValid(target.validity.valid);\n    setErrorVisible(!target.validity.valid);\n    setErrorMessage(target.validationMessage);\n  };\n\n  return (\n    <div className={fieldClass}>\n      <input\n        {...getOnlyDOMProps(props)}\n        className={inputClass}\n        id={`${props.name}-input`}\n        name={`${props.name}Input`}\n        onInput={handleInput}\n        defaultValue={value}\n        ref={inputRef}\n      />\n      <span\n        className={`field__error-message ${\n          isErrorVisible ? \"field__error-message_visible\" : \"\"\n        }`}\n        id={`${props.name}-input-error`}\n      >\n        {errorMessage}\n      </span>\n    </div>\n  );\n});\n\nexport default Field;\n","import React from \"react\";\nimport ThemeContext from \"../contexts/ThemeContext\";\nimport { getOnlyDOMProps, addThemeAttrs } from \"../utils/utils\";\n\nconst SubmitButton = React.memo((props) => {\n  // проверка на undefined необходима для включения кнопки, если клиент не определил ее поведение\n  const currentTheme = React.useContext(ThemeContext);\n\n  const defaultClass = \"submit-button button\";\n  const disabledClass = `submit-button_disabled`;\n  const className = `${addThemeAttrs({\n    theme: currentTheme,\n    classList: `${defaultClass} ${props.className}`,\n  })} ${props.isEnabled || props.isEnabled === undefined ? \"\" : disabledClass}`;\n\n  return (\n    <button {...getOnlyDOMProps(props)} className={className} type=\"submit\">\n      {props.text}\n    </button>\n  );\n});\n\nexport default SubmitButton;\n","import React from \"react\";\r\nimport ThemeContext from \"../contexts/ThemeContext\";\r\nimport { addThemeAttrs, getOnlyDOMProps } from \"../utils/utils\";\r\n\r\nfunction Fieldset(props) {\r\n  // contexts\r\n  const currentTheme = React.useContext(ThemeContext);\r\n\r\n  // classes\r\n  const fieldsetClassName = addThemeAttrs({\r\n    theme: currentTheme,\r\n    classList: props.className,\r\n  });\r\n\r\n  return (\r\n    <div {...getOnlyDOMProps(props)} className={fieldsetClassName}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Fieldset;\r\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport Field from \"./Field\";\nimport SubmitButton from \"./SubmitButton\";\nimport {\n  colorFormClassNames,\n  editProfilePopupSettings,\n} from \"../utils/constants\";\nimport Fieldset from \"./Fieldset\";\n\nfunction EditProfilePopup({ onClose, isOpen, onUpdateUser }) {\n  // constants\n  const {\n    defaultText: defaultSubmitButtonText,\n    loadingText: loadingSubmitButtonText,\n  } = editProfilePopupSettings.submitButton;\n\n  // contexts\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // states\n  const [nameInput, setNameInput] = React.useState({\n    value: currentUser.name,\n    isValid: false,\n  });\n  const [descriptionInput, setDescriptionInput] = React.useState({\n    value: currentUser.about,\n    isValid: false,\n  });\n  const [isValid, setValid] = React.useState(false);\n  const [submitButtonText, setSubmitButtonText] = React.useState(\n    defaultSubmitButtonText\n  );\n\n  React.useEffect(() => {\n    const inputs = [nameInput, descriptionInput];\n    setValid(inputs.every(({ isValid }) => isValid));\n  }, [nameInput, descriptionInput]);\n\n  // handlers\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (isValid) {\n      setSubmitButtonText(loadingSubmitButtonText);\n      onUpdateUser({\n        name: nameInput.value,\n        about: descriptionInput.value,\n      }).finally(() => {\n        setSubmitButtonText(defaultSubmitButtonText);\n      });\n    }\n  };\n\n  return (\n    <PopupWithForm\n      {...editProfilePopupSettings.popup}\n      onClose={onClose}\n      isOpen={isOpen}\n      onSubmit={handleSubmit}\n      formClass={colorFormClassNames.form}\n      titleClass={colorFormClassNames.title}\n      submitButton={\n        <SubmitButton\n          {...editProfilePopupSettings.submitButton}\n          className={colorFormClassNames.submitButton}\n          isEnabled={isValid}\n          text={submitButtonText}\n        />\n      }\n    >\n      <Fieldset\n        className={`${colorFormClassNames.fieldset} ${editProfilePopupSettings.fieldsetClassName}`}\n      >\n        <Field\n          {...editProfilePopupSettings.nameInput}\n          fieldClass={colorFormClassNames.field}\n          inputClass={colorFormClassNames.input}\n          onInput={setNameInput}\n          isVisible={isOpen}\n          defaultValue={currentUser.name ? currentUser.name : \"\"}\n        />\n        <Field\n          {...editProfilePopupSettings.descriptionInput}\n          fieldClass={colorFormClassNames.field}\n          inputClass={colorFormClassNames.input}\n          onInput={setDescriptionInput}\n          isVisible={isOpen}\n          defaultValue={currentUser.about ? currentUser.about : \"\"}\n        />\n      </Fieldset>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React from \"react\";\nimport Field from \"./Field\";\nimport Fieldset from \"./Fieldset\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport SubmitButton from \"./SubmitButton\";\nimport { addPlacePopupSettings, colorFormClassNames } from \"../utils/constants\";\n\nfunction AddPlacePopup({ onClose, isOpen, onAddPlace }) {\n  // constants\n  const {\n    defaultText: defaultSubmitButtonText,\n    loadingText: loadingSubmitButtonText,\n  } = addPlacePopupSettings.submitButton;\n\n  // states\n  const [titleInput, setTitleInput] = React.useState({\n    value: \"\",\n    isValid: false,\n  });\n  const [linkInput, setLinkInput] = React.useState({\n    value: \"\",\n    isValid: false,\n  });\n  const [isValid, setValid] = React.useState(false);\n  const [submitButtonText, setSubmitButtonText] = React.useState(\n    defaultSubmitButtonText\n  );\n\n  // effects\n  React.useEffect(() => {\n    const inputs = [titleInput, linkInput];\n    setValid(inputs.every(({ isValid }) => isValid));\n  }, [titleInput, linkInput]);\n\n  // handlers\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (isValid) {\n      setSubmitButtonText(loadingSubmitButtonText);\n      onAddPlace({ name: titleInput.value, link: linkInput.value }).finally(\n        () => {\n          setSubmitButtonText(defaultSubmitButtonText);\n        }\n      );\n    }\n  };\n\n  return (\n    <PopupWithForm\n      {...addPlacePopupSettings.popup}\n      onClose={onClose}\n      isOpen={isOpen}\n      onSubmit={handleSubmit}\n      formClass={colorFormClassNames.form}\n      titleClass={colorFormClassNames.title}\n      submitButton={\n        <SubmitButton\n          {...addPlacePopupSettings.submitButton}\n          className={colorFormClassNames.submitButton}\n          isEnabled={isValid}\n          text={submitButtonText}\n        />\n      }\n    >\n      <Fieldset\n        className={`${colorFormClassNames.fieldset} ${addPlacePopupSettings.fieldsetClassName}`}\n      >\n        <Field\n          {...addPlacePopupSettings.titleInput}\n          fieldClass={colorFormClassNames.field}\n          inputClass={colorFormClassNames.input}\n          onInput={setTitleInput}\n          isVisible={isOpen}\n        />\n        <Field\n          {...addPlacePopupSettings.linkInput}\n          fieldClass={colorFormClassNames.field}\n          inputClass={colorFormClassNames.input}\n          onInput={setLinkInput}\n          isVisible={isOpen}\n        />\n      </Fieldset>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import React from \"react\";\nimport Field from \"./Field\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport SubmitButton from \"./SubmitButton\";\nimport {\n  colorFormClassNames,\n  editAvatarPopupSettings,\n} from \"../utils/constants\";\nimport Fieldset from \"./Fieldset\";\n\nfunction EditAvatarPopup({ onClose, isOpen, onUpdateAvatar }) {\n  // constants\n  const {\n    defaultText: defaultSubmitButtonText,\n    loadingText: loadingSubmitButtonText,\n  } = editAvatarPopupSettings.submitButton;\n\n  // states\n  const [avatarInput, setAvatarInput] = React.useState({\n    value: \"\",\n    isValid: false,\n  });\n  const [isValid, setValid] = React.useState(false);\n  const [submitButtonText, setSubmitButtonText] = React.useState(\n    defaultSubmitButtonText\n  );\n\n  // effects\n  React.useEffect(() => {\n    setValid(avatarInput.isValid);\n  }, [avatarInput]);\n\n  // handlers\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (isValid) {\n      setSubmitButtonText(loadingSubmitButtonText);\n      onUpdateAvatar({ avatar: avatarInput.value }).finally(() => {\n        setSubmitButtonText(defaultSubmitButtonText);\n      });\n    }\n  };\n\n  return (\n    <PopupWithForm\n      {...editAvatarPopupSettings.popup}\n      formClass={colorFormClassNames.form}\n      titleClass={colorFormClassNames.title}\n      onClose={onClose}\n      isOpen={isOpen}\n      onSubmit={handleSubmit}\n      submitButton={\n        <SubmitButton\n          {...editAvatarPopupSettings.submitButton}\n          className={colorFormClassNames.submitButton}\n          isEnabled={isValid}\n          text={submitButtonText}\n        />\n      }\n    >\n      <Fieldset\n        className={`${colorFormClassNames.fieldset} ${editAvatarPopupSettings.fieldsetClassName}`}\n      >\n        <Field\n          {...editAvatarPopupSettings.avatarInput}\n          fieldClass={colorFormClassNames.field}\n          inputClass={colorFormClassNames.input}\n          onInput={setAvatarInput}\n          isVisible={isOpen}\n        />\n      </Fieldset>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import React from \"react\";\nimport ThemeContext from \"../contexts/ThemeContext\";\nimport { addThemeAttrs } from \"../utils/utils\";\nimport { loadingSpinnerClassName } from \"../utils/constants\";\n\nfunction LoadingSpinner() {\n  // contexts\n  const currentTheme = React.useContext(ThemeContext);\n\n  // classes\n  const spinnerClassName = addThemeAttrs({\n    theme: currentTheme,\n    classList: loadingSpinnerClassName,\n  });\n  return <div className={spinnerClassName} />;\n}\nexport default LoadingSpinner;\n","import React from \"react\";\nimport {\n  colorFormClassNames,\n  confirmPopupClassNames,\n} from \"../utils/constants\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport SubmitButton from \"./SubmitButton\";\n\nfunction ConfirmPopup({ onClose, isOpen, onCardDelete, card }) {\n  // constants\n  const {\n    defaultText: defaultSubmitButtonText,\n    loadingText: loadingSubmitButtonText,\n  } = confirmPopupClassNames.submitButton;\n\n  // states\n  const [submitButtonText, setSubmitButtonText] = React.useState(\n    defaultSubmitButtonText\n  );\n\n  // handlers\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    setSubmitButtonText(loadingSubmitButtonText);\n    onCardDelete(card).finally(() => {\n      setSubmitButtonText(defaultSubmitButtonText);\n    });\n  };\n  return (\n    <PopupWithForm\n      {...confirmPopupClassNames.popup}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      formClass={colorFormClassNames.form}\n      titleClass={colorFormClassNames.title}\n      submitButton={\n        <SubmitButton\n          className={colorFormClassNames.submitButton}\n          text={submitButtonText}\n        />\n      }\n    />\n  );\n}\n\nexport default ConfirmPopup;\n","import React from \"react\";\r\nimport Field from \"./Field\";\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport Form from \"./Form\";\r\nimport { linkPaths, registerSettings } from \"../utils/constants\";\r\nimport ColoredLink from \"./ColoredLink\";\r\nimport ColoredTitle from \"./ColoredTitle\";\r\nimport Fieldset from \"./Fieldset\";\r\n\r\nfunction Register(props) {\r\n  // constants\r\n  const {\r\n    classNames,\r\n    emailInput: emailInputSettings,\r\n    passwordInput: passwordInputSettings,\r\n    attributes,\r\n  } = registerSettings;\r\n\r\n  // states\r\n  const [isValid, setValid] = React.useState(false);\r\n  const [emailInput, setEmailInput] = React.useState({\r\n    value: \"\",\r\n    isValid: false,\r\n  });\r\n  const [passwordInput, setPasswordInput] = React.useState({\r\n    value: \"\",\r\n    isValid: false,\r\n  });\r\n  const [submitButtonText, setSubmitButtonText] = React.useState(\r\n    attributes.submitButtonDefaultText\r\n  );\r\n\r\n  // effects\r\n  React.useEffect(() => {\r\n    const inputs = [emailInput, passwordInput];\r\n    setValid(inputs.every(({ isValid }) => isValid));\r\n  }, [passwordInput, emailInput]);\r\n\r\n  // handlers\r\n  const handleRegister = (evt) => {\r\n    evt.preventDefault();\r\n    if (isValid) {\r\n      setSubmitButtonText(attributes.submitButtonLoadingText);\r\n      props\r\n        .onRegister({\r\n          email: emailInput.value,\r\n          password: passwordInput.value,\r\n        })\r\n        .finally(() => {\r\n          setSubmitButtonText(attributes.submitButtonDefaultText);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={classNames.register}>\r\n      <div className={classNames.registerContainer}>\r\n        <Form className={classNames.form} onSubmit={handleRegister}>\r\n          <ColoredTitle className={classNames.title}>\r\n            {attributes.titleText}\r\n          </ColoredTitle>\r\n          <Fieldset className={classNames.fieldset}>\r\n            <Field\r\n              {...emailInputSettings}\r\n              onInput={setEmailInput}\r\n              inputClass={classNames.input}\r\n              fieldClass={classNames.field}\r\n            />\r\n            <Field\r\n              {...passwordInputSettings}\r\n              onInput={setPasswordInput}\r\n              inputClass={classNames.input}\r\n              fieldClass={classNames.field}\r\n            />\r\n          </Fieldset>\r\n          <SubmitButton\r\n            className={classNames.submitButton}\r\n            text={submitButtonText}\r\n            isEnabled={isValid}\r\n          />\r\n        </Form>\r\n        <div className={classNames.subtextContainer}>\r\n          <ColoredLink className={classNames.link} to={linkPaths.loginPage}>\r\n            Уже зарегистрированы? Войти\r\n          </ColoredLink>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport { linkPaths } from \"../utils/constants\";\r\n\r\nfunction ProtectedRoute({ component: Component, ...props }) {\r\n  return (\r\n    <Route>\r\n      {() =>\r\n        props.loggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={linkPaths.loginPage} />\r\n        )\r\n      }\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","const isAvailableTheme = (theme) => {\r\n  const availableThemes = [\"dark\", \"light\"];\r\n  return theme && availableThemes.some((item) => item === theme);\r\n};\r\n\r\nexport const updateUserTheme = (theme) => {\r\n  const defaultTheme = \"dark\";\r\n  if (isAvailableTheme(theme)) {\r\n    localStorage.setItem(\"theme\", theme);\r\n  } else {\r\n    localStorage.setItem(\"theme\", defaultTheme);\r\n  }\r\n};\r\n\r\nexport const getUserTheme = () => {\r\n  const currentTheme = localStorage.getItem(\"theme\");\r\n  if (isAvailableTheme(currentTheme)) {\r\n    return currentTheme;\r\n  } else {\r\n    updateUserTheme();\r\n    return localStorage.getItem(\"theme\");\r\n  }\r\n};\r\n","class Auth {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n  _errorIdentifier(code, message) {\r\n    return `${message}. Код ошибки: ${code}`;\r\n  }\r\n  sendRequest({\r\n    path,\r\n    method = \"GET\",\r\n    headers,\r\n    body,\r\n    errorMessage,\r\n    errorIdentifier,\r\n  }) {\r\n    return fetch(new URL(path, this._baseUrl), {\r\n      method: method,\r\n      headers: { ...this._headers, ...headers },\r\n      body: body,\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n\r\n      // проверяем, есть ли кастомный идентификатор ошибок\r\n      // если есть - проверим, смог ли обработать ошибку\r\n      if (errorIdentifier && errorIdentifier(res.status)) {\r\n        return Promise.reject(errorIdentifier(res.status));\r\n      } else {\r\n        return Promise.reject(this._errorIdentifier(res.status, errorMessage));\r\n      }\r\n    });\r\n  }\r\n  register({ email, password }) {\r\n    const errorIdentifier = (code) => {\r\n      if (code === 400) {\r\n        return \"Такой пользователь уже существует\";\r\n      }\r\n    };\r\n\r\n    return this.sendRequest({\r\n      path: \"signup\",\r\n      method: \"POST\",\r\n      body: JSON.stringify({ email, password }),\r\n      errorMessage: \"Не удалось зарегистрировать пользователя\",\r\n      errorIdentifier: errorIdentifier,\r\n    });\r\n  }\r\n  authorize({ email, password }) {\r\n    const errorIdentifier = (code) => {\r\n      if (code === 400) {\r\n        return \"Не все поля были заполнены\";\r\n      } else if (code === 401) {\r\n        return \"Неверный email или пароль\";\r\n      }\r\n    };\r\n\r\n    return this.sendRequest({\r\n      path: \"signin\",\r\n      method: \"POST\",\r\n      body: JSON.stringify({ email, password }),\r\n      errorMessage: \"Не удалось авторизовать пользователя\",\r\n      errorIdentifier: errorIdentifier,\r\n    });\r\n  }\r\n  checkToken(token) {\r\n    const errorIdentifier = (code) => {\r\n      if (code === 400) {\r\n        return \"Токен авторизации не был передан или передан в неверном формате\";\r\n      } else if (code === 401) {\r\n        return \"Некорректный токен авторизации\";\r\n      }\r\n    };\r\n\r\n    return this.sendRequest({\r\n      path: \"users/me\",\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      errorMessage: \"Не удалось проверить токен\",\r\n      errorIdentifier: errorIdentifier,\r\n    });\r\n  }\r\n}\r\n\r\nconst auth = new Auth({\r\n  baseUrl: \"https://auth.nomoreparties.co/\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default auth;\r\n","import React from \"react\";\r\nimport Field from \"./Field\";\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport Form from \"./Form\";\r\nimport { loginSettings } from \"../utils/constants\";\r\nimport ColoredTitle from \"./ColoredTitle\";\r\nimport Fieldset from \"./Fieldset\";\r\n\r\nfunction Login(props) {\r\n  // constants\r\n  const {\r\n    classNames,\r\n    emailInput: emailInputSettings,\r\n    passwordInput: passwordInputSettings,\r\n    attributes,\r\n  } = loginSettings;\r\n\r\n  // states\r\n  const [isValid, setValid] = React.useState(false);\r\n  const [emailInput, setEmailInput] = React.useState({\r\n    value: \"\",\r\n    isValid: false,\r\n  });\r\n  const [passwordInput, setPasswordInput] = React.useState({\r\n    value: \"\",\r\n    isValid: false,\r\n  });\r\n  const [submitButtonText, setSubmitButtonText] = React.useState(\r\n    attributes.submitButtonDefaultText\r\n  );\r\n\r\n  // effects\r\n  React.useEffect(() => {\r\n    const inputs = [emailInput, passwordInput];\r\n    setValid(inputs.every(({ isValid }) => isValid));\r\n  }, [passwordInput, emailInput]);\r\n\r\n  // handlers\r\n  const handleLogin = (evt) => {\r\n    evt.preventDefault();\r\n    if (isValid) {\r\n      setSubmitButtonText(attributes.submitButtonLoadingText);\r\n      props\r\n        .onLogin({ email: emailInput.value, password: passwordInput.value })\r\n        .finally(() => {\r\n          setSubmitButtonText(attributes.submitButtonDefaultText);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={classNames.login}>\r\n      <div className={classNames.loginContainer}>\r\n        <Form className={classNames.form} onSubmit={handleLogin}>\r\n          <ColoredTitle className={classNames.title}>\r\n            {attributes.titleText}\r\n          </ColoredTitle>\r\n          <Fieldset className={classNames.fieldset}>\r\n            <Field\r\n              {...emailInputSettings}\r\n              onInput={setEmailInput}\r\n              inputClass={classNames.input}\r\n              fieldClass={classNames.field}\r\n            />\r\n            <Field\r\n              {...passwordInputSettings}\r\n              onInput={setPasswordInput}\r\n              inputClass={classNames.input}\r\n              fieldClass={classNames.field}\r\n            />\r\n          </Fieldset>\r\n          <SubmitButton\r\n            className={classNames.submitButton}\r\n            text={submitButtonText}\r\n            isEnabled={isValid}\r\n          />\r\n        </Form>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/failure.df8eddf6.svg\";","import React from \"react\";\r\nimport Popup from \"./Popup\";\r\nimport successLogo from \"../images/success.svg\";\r\nimport failureLogo from \"../images/failure.svg\";\r\nimport { infoTooltipClassNames } from \"../utils/constants\";\r\nimport { addThemeAttrs } from \"../utils/utils\";\r\nimport ThemeContext from \"../contexts/ThemeContext\";\r\n\r\nfunction InfoTooltip(props) {\r\n  // contexts\r\n  const currentTheme = React.useContext(ThemeContext);\r\n\r\n  // classes\r\n  const infoTooltipClassName = addThemeAttrs({\r\n    theme: currentTheme,\r\n    classList: infoTooltipClassNames.infoTooltip,\r\n  });\r\n\r\n  // handlers\r\n  const handleClose = () => {\r\n    props.onClose(props.redirectPath);\r\n  };\r\n  return (\r\n    <Popup\r\n      name={infoTooltipClassNames.infoTooltip}\r\n      isOpen={props.isOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div className={infoTooltipClassName}>\r\n        {props.isSuccess ? (\r\n          <img\r\n            className={infoTooltipClassNames.icon}\r\n            src={successLogo}\r\n            alt=\"Успех\"\r\n          />\r\n        ) : (\r\n          <img\r\n            className={infoTooltipClassNames.icon}\r\n            src={failureLogo}\r\n            alt=\"Ошибка\"\r\n          />\r\n        )}\r\n        <p className={infoTooltipClassNames.text}>{props.message}</p>\r\n      </div>\r\n    </Popup>\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;\r\n","import React from \"react\";\nimport api from \"../utils/api\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport ImagePopup from \"./ImagePopup\";\nimport Main from \"./Main\";\nimport MessagePopup from \"./MessagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ConfirmPopup from \"./ConfirmPopup\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport ThemeContext from \"../contexts/ThemeContext\";\nimport { addThemeAttrs } from \"../utils/utils\";\nimport * as theme from \"../utils/theme\";\nimport auth from \"../utils/auth\";\nimport Login from \"./Login\";\nimport { Redirect, Route, Switch, useHistory } from \"react-router-dom\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport { linkPaths, loginSettings, registerSettings } from \"../utils/constants\";\n\nfunction App() {\n  // states\n  const [isAppLoading, setIsAppLoading] = React.useState(true);\n  const [isDOMLoading, setDOMLoading] = React.useState(true);\n  const [isApiDataLoading, setApiDataLoading] = React.useState(true);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(\n    false\n  );\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmPopupOpen, setConfirmPopupOpen] = React.useState(false);\n  const [isMessagePopupOpen, setMessagePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [isInfoTooltipPopupOpen, setInfoTooltipPopupOpen] = React.useState(\n    false\n  );\n  const [selectedCard, setSelectedCard] = React.useState();\n  const [popupMessage, setPopupMessage] = React.useState(\"\");\n  const [infoTooltipData, setInfoTooltipData] = React.useState({\n    message: \"\",\n    redirectPath: \"\",\n  });\n  const [isActionSuccess, setActionSuccess] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({\n    name: \"\",\n    about: \"\",\n    avatar: \"\",\n    _id: \"\",\n  });\n  const [email, setEmail] = React.useState(\"\");\n  const [currentTheme, setCurrentTheme] = React.useState(theme.getUserTheme());\n  const [cards, setCards] = React.useState([]);\n  const [\n    cardCandidateForDeletion,\n    setCardCandidateForDeletion,\n  ] = React.useState();\n  const [isLoggedIn, setLoggedIn] = React.useState(false);\n  const history = useHistory();\n\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    setDOMLoading(false);\n  });\n\n  // effects\n  React.useEffect(() => {\n    const loadApiData = () => {\n      handleApiError(\n        Promise.all([api.getUserInfo(), api.getInitialCards()]),\n        (result) => {\n          const [userInfo, initialCards] = result;\n          setCurrentUser(userInfo);\n          setCards(initialCards);\n          setApiDataLoading(false);\n        }\n      );\n    };\n\n    const handleTokenCheck = () => {\n      const jwt = localStorage.getItem(\"jwt\");\n      if (jwt) {\n        auth\n          .checkToken(jwt)\n          .then((res) => {\n            setLoggedIn(true);\n            setEmail(res.data.email);\n            loadApiData();\n          })\n          .catch(() => {\n            localStorage.removeItem(\"jwt\");\n            history.push(linkPaths.loginPage);\n            setApiDataLoading(false);\n          });\n      } else {\n        setLoggedIn(false);\n        setApiDataLoading(false);\n      }\n    };\n    handleTokenCheck();\n  }, [isLoggedIn, history]);\n\n  React.useEffect(() => {\n    setIsAppLoading(isApiDataLoading || isDOMLoading);\n  }, [isApiDataLoading, isDOMLoading]);\n\n  React.useEffect(() => {\n    theme.updateUserTheme(currentTheme);\n  }, [currentTheme]);\n\n  // functions\n  const closeMessagePopup = () => {\n    setMessagePopupOpen(false);\n  };\n\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setConfirmPopupOpen(false);\n    setImagePopupOpen(false);\n  };\n\n  const updateToken = (data) => {\n    localStorage.setItem(\"jwt\", data.token);\n  };\n\n  const openInfoTooltip = ({ message, redirectPath, isSuccess }) => {\n    setActionSuccess(isSuccess);\n    setInfoTooltipData({ message, redirectPath });\n    setInfoTooltipPopupOpen(true);\n  };\n\n  // auth-handlers\n  const handleLogin = (data) => {\n    return auth\n      .authorize(data)\n      .then((res) => {\n        updateToken(res);\n        setLoggedIn(true);\n        setEmail(data.email);\n        openInfoTooltip({\n          message: loginSettings.attributes.successMessage,\n          redirectPath: linkPaths.mainPage,\n          isSuccess: true,\n        });\n      })\n      .catch((errorMessage) => {\n        openInfoTooltip({ message: errorMessage, isSuccess: false });\n      });\n  };\n\n  const handleRegister = (data) => {\n    return auth\n      .register(data)\n      .then((res) => {\n        updateToken(res);\n        openInfoTooltip({\n          message: registerSettings.attributes.successMessage,\n          redirectPath: linkPaths.loginPage,\n          isSuccess: true,\n        });\n      })\n      .catch((errorMessage) => {\n        setActionSuccess(false);\n        openInfoTooltip({\n          message: errorMessage,\n          isSuccess: false,\n        });\n      });\n  };\n\n  const handleSignOut = () => {\n    localStorage.removeItem(\"jwt\");\n    setLoggedIn(false);\n    history.push(linkPaths.loginPage);\n  };\n\n  // api handlers\n  const handleApiError = (promise, callback) => {\n    return promise\n      .then((data) => callback(data))\n      .catch((error) => {\n        if (error instanceof TypeError) {\n          setPopupMessage(\n            \"Потеряно соединение с сервером, повторите попытку позднее\"\n          );\n        } else if (typeof error === \"string\") {\n          setPopupMessage(error);\n        } else {\n          setPopupMessage(\"Непредвиденная ошибка, повторите попытку позднее\");\n        }\n        setMessagePopupOpen(true);\n      });\n  };\n  const handleUpdateUser = (data) => {\n    return handleApiError(api.setUserInfo(data), (userInfo) => {\n      setCurrentUser(userInfo);\n      setEditProfilePopupOpen(false);\n    });\n  };\n  const handleAddPlace = (data) => {\n    return handleApiError(api.addPlace(data), (newCard) => {\n      setCards([newCard, ...cards]);\n      setAddPlacePopupOpen(false);\n    });\n  };\n  const handleUpdateAvatar = (data) => {\n    return handleApiError(api.changeAvatar(data.avatar), ({ avatar }) => {\n      currentUser.avatar = avatar;\n      setEditAvatarPopupOpen(false);\n    });\n  };\n  const handleInfoTooltipPopupClose = (redirectPath) => {\n    setInfoTooltipPopupOpen(false);\n    if (redirectPath) {\n      history.push(redirectPath);\n    }\n  };\n\n  // button-handlers\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n  const handleThemeSwitch = () => {\n    if (currentTheme === \"dark\") {\n      setCurrentTheme(\"light\");\n    } else {\n      setCurrentTheme(\"dark\");\n    }\n  };\n\n  // ---------------------------------------------------------------\n\n  // card-handlers\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  };\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((user) => user._id === currentUser._id);\n    handleApiError(api.changeLikeCardStatus(card._id, !isLiked), (newCard) => {\n      setCards(\n        cards.map((oldCard) => (oldCard._id === card._id ? newCard : oldCard))\n      );\n    });\n  };\n  const handleCardDeleteClick = (card) => {\n    setCardCandidateForDeletion(card);\n    setConfirmPopupOpen(true);\n  };\n  const handleCardDelete = (card) => {\n    return handleApiError(api.deleteCard(card._id), () => {\n      setCards(cards.filter((oldCard) => oldCard._id !== card._id));\n      setConfirmPopupOpen(false);\n    });\n  };\n  // ---------------------------------------------------------------\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <ThemeContext.Provider value={currentTheme}>\n        <div\n          className={addThemeAttrs({ theme: currentTheme, classList: \"page\" })}\n        >\n          <Header\n            onThemeSwitch={handleThemeSwitch}\n            onSignOut={handleSignOut}\n            email={email}\n          />\n          {isAppLoading ? (\n            <LoadingSpinner />\n          ) : (\n            <>\n              <Switch>\n                <ProtectedRoute\n                  exact\n                  path=\"/\"\n                  loggedIn={isLoggedIn}\n                  cards={cards}\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddPlaceClick}\n                  onEditAvatar={handleEditAvatarClick}\n                  onCardClick={handleCardClick}\n                  onCardLike={handleCardLike}\n                  onCardDelete={handleCardDeleteClick}\n                  component={Main}\n                />\n                <Route path={linkPaths.loginPage}>\n                  <Login onLogin={handleLogin} />\n                </Route>\n                <Route path={linkPaths.registerPage}>\n                  <Register onRegister={handleRegister} />\n                </Route>\n                <Route path=\"*\">\n                  {isLoggedIn ? (\n                    <Redirect to={linkPaths.mainPage} />\n                  ) : (\n                    <Redirect to={linkPaths.loginPage} />\n                  )}\n                </Route>\n              </Switch>\n              <Footer />\n\n              <EditProfilePopup\n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                onUpdateUser={handleUpdateUser}\n              />\n              <AddPlacePopup\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlace}\n              />\n              <EditAvatarPopup\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                onUpdateAvatar={handleUpdateAvatar}\n              />\n              <ImagePopup\n                {...selectedCard}\n                isOpen={isImagePopupOpen}\n                onClose={closeAllPopups}\n              />\n              <MessagePopup\n                isOpen={isMessagePopupOpen}\n                onClose={closeMessagePopup}\n                message={popupMessage}\n              />\n              <ConfirmPopup\n                card={cardCandidateForDeletion}\n                onCardDelete={handleCardDelete}\n                isOpen={isConfirmPopupOpen}\n                onClose={closeAllPopups}\n              />\n              <InfoTooltip\n                isOpen={isInfoTooltipPopupOpen}\n                onClose={handleInfoTooltipPopupClose}\n                message={infoTooltipData.message}\n                redirectPath={infoTooltipData.redirectPath}\n                isSuccess={isActionSuccess}\n              />\n            </>\n          )}\n        </div>\n      </ThemeContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}